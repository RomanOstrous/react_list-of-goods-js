{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_NAME","SORT_LENGTH","App","useState","sort","setSort","reverse","setReverse","visibleGood","goods","preparedGoods","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","value","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAY,OACZC,EAAc,SA2Bb,IAAMC,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAA0BC,EAA1B,GAAqD,IAAlBL,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,QACjCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcN,MAAK,SAACO,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFI,EAAcJ,UAGTI,EAMaK,CAAiBhB,EAAiB,CAAEK,OAAME,YAO9D,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAAE,WAAYd,IAASJ,IACvDmB,QAAS,kBAAMd,EAAQL,IAHzB,iCAQA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,WAAYd,IAASH,IAC1DkB,QAAS,kBAAMd,EAAQJ,IAHzB,4BAQA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaZ,IAClDa,QAAS,kBAAMZ,GAAYD,IAH7B,sBAQEF,GAAQE,IAER,wBACEW,KAAK,SACLD,UAAU,4BACVG,QArCE,WACVd,EAAQ,IACRE,GAAW,IAgCL,sBAUJ,6BACGC,EAAYY,KAAI,SAAAC,GAAK,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7cc468e2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_NAME = 'name';\nconst SORT_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sort, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sort) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sort) {\n        case SORT_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sort, setSort] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGood = getPreparedGoods(goodsFromServer, { sort, reverse });\n\n  const onC = () => {\n    setSort('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(`button is-info`, { 'is-light': sort !== SORT_NAME })}\n          onClick={() => setSort(SORT_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(`button is-success`, { 'is-light': sort !== SORT_LENGTH })}\n          onClick={() => setSort(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reverse })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sort || reverse)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={onC}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGood.map(value => (\n          <li\n            data-cy=\"Good\"\n            key={value}\n          >\n            {value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}